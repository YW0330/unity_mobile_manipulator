//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.KinovaTest
{
    [Serializable]
    public class KinovaMsgMsg : Message
    {
        public const string k_RosMessageName = "kinova_test/kinovaMsg";
        public override string RosMessageName => k_RosMessageName;

        public float[] jointPos;
        public float[] jointVel;
        public double[] kinova_X;
        public double[] kinova_dX;
        public float gripperPos;
        public float gripperVel;

        public KinovaMsgMsg()
        {
            this.jointPos = new float[7];
            this.jointVel = new float[7];
            this.kinova_X = new double[3];
            this.kinova_dX = new double[3];
            this.gripperPos = 0.0f;
            this.gripperVel = 0.0f;
        }

        public KinovaMsgMsg(float[] jointPos, float[] jointVel, double[] kinova_X, double[] kinova_dX, float gripperPos, float gripperVel)
        {
            this.jointPos = jointPos;
            this.jointVel = jointVel;
            this.kinova_X = kinova_X;
            this.kinova_dX = kinova_dX;
            this.gripperPos = gripperPos;
            this.gripperVel = gripperVel;
        }

        public static KinovaMsgMsg Deserialize(MessageDeserializer deserializer) => new KinovaMsgMsg(deserializer);

        private KinovaMsgMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.jointPos, sizeof(float), 7);
            deserializer.Read(out this.jointVel, sizeof(float), 7);
            deserializer.Read(out this.kinova_X, sizeof(double), 3);
            deserializer.Read(out this.kinova_dX, sizeof(double), 3);
            deserializer.Read(out this.gripperPos);
            deserializer.Read(out this.gripperVel);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.jointPos);
            serializer.Write(this.jointVel);
            serializer.Write(this.kinova_X);
            serializer.Write(this.kinova_dX);
            serializer.Write(this.gripperPos);
            serializer.Write(this.gripperVel);
        }

        public override string ToString()
        {
            return "KinovaMsgMsg: " +
            "\njointPos: " + System.String.Join(", ", jointPos.ToList()) +
            "\njointVel: " + System.String.Join(", ", jointVel.ToList()) +
            "\nkinova_X: " + System.String.Join(", ", kinova_X.ToList()) +
            "\nkinova_dX: " + System.String.Join(", ", kinova_dX.ToList()) +
            "\ngripperPos: " + gripperPos.ToString() +
            "\ngripperVel: " + gripperVel.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
